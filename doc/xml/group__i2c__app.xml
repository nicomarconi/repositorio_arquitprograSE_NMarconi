<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__i2c__app" kind="group">
    <compoundname>i2c_app</compoundname>
    <title>I2c_app</title>
    <innerfile refid="i2c__app_8h">i2c_app.h</innerfile>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__i2c__app_1gadbeb61fe3c40b09ee1b6de91f21cb6ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t i2c_master_init</definition>
        <argsstring>(void)</argsstring>
        <name>i2c_master_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The <bold><ref refid="group__i2c__app_1gadbeb61fe3c40b09ee1b6de91f21cb6ae" kindref="member">i2c_master_init()</ref></bold> function will initialise the I2C protocol in the master mode, doing the folllowing steps: </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para><bold>1ยบ) Configuration:</bold> will set the initialization parameters of the structure <bold>i2c_config_t conf{}</bold> (master or slave mode,GPIO pins for SDA and SCL, clock speed, etc.).</para>
</listitem><listitem><para><bold>2ยบ) Set the configuration:</bold> will write the values that were set in step 1ยบ. using the esp-idf function <bold><ref refid="group__i2c__app_1ga44211242a6b4b7420d5159fbbdef27cf" kindref="member">i2c_param_config()</ref></bold>, icluded in the directory (esp/esp-idf/components/driver/i2c/include/driver/i2c.h).</para>
</listitem><listitem><para><bold>3ยบ) Install driver:</bold> will install the diver, using the esp-idf function <bold><ref refid="group__i2c__app_1ga9caa9285f1241dbb8240be98f10b0f1b" kindref="member">i2c_driver_install()</ref></bold> ,included in the directory (esp/esp-idf/components/driver/i2c/include/driver/i2c.h). </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolas/Documentos/especialidad_en_SE/2_arquitectura_2024_SE/lcd_hdt11_nico/main/devices/i2c_app.c" line="9" column="11" bodyfile="/home/nicolas/Documentos/especialidad_en_SE/2_arquitectura_2024_SE/lcd_hdt11_nico/main/devices/i2c_app.c" bodystart="9" bodyend="25" declfile="/home/nicolas/Documentos/especialidad_en_SE/2_arquitectura_2024_SE/lcd_hdt11_nico/main/devices/include/i2c_app.h" declline="28" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__i2c__app_1ga44211242a6b4b7420d5159fbbdef27cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t i2c_param_config</definition>
        <argsstring>(i2c_port_t i2c_master_port, const i2c_config_t *conf)</argsstring>
        <name>i2c_param_config</name>
        <param>
          <type>i2c_port_t</type>
          <declname>i2c_master_port</declname>
        </param>
        <param>
          <type>const i2c_config_t *</type>
          <declname>conf</declname>
        </param>
        <briefdescription>
<para>The i2c_param_config function will write the parameters that were set. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i2c_master_port</parametername>
</parameternamelist>
<parameterdescription>
<para>is the I2C instance we are using, I2C_NUM_0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">conf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to I2C parameter settings </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolas/Documentos/especialidad_en_SE/2_arquitectura_2024_SE/lcd_hdt11_nico/main/devices/include/i2c_app.h" line="35" column="12" declfile="/home/nicolas/Documentos/especialidad_en_SE/2_arquitectura_2024_SE/lcd_hdt11_nico/main/devices/include/i2c_app.h" declline="35" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__i2c__app_1ga9caa9285f1241dbb8240be98f10b0f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>esp_err_t</type>
        <definition>esp_err_t i2c_driver_install</definition>
        <argsstring>(i2c_port_t i2c_num, i2c_mode_t mode, size_t slv_rx_buf_len, size_t slv_tx_buf_len, int intr_alloc_flags)</argsstring>
        <name>i2c_driver_install</name>
        <param>
          <type>i2c_port_t</type>
          <declname>i2c_num</declname>
        </param>
        <param>
          <type>i2c_mode_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>slv_rx_buf_len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>slv_tx_buf_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>intr_alloc_flags</declname>
        </param>
        <briefdescription>
<para>The i2c_driver_install function will install the driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i2c_num</parametername>
</parameternamelist>
<parameterdescription>
<para>is the I2C instance we are using, I2C_NUM_0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the I2C mode, which is master in this case. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slv_rx_buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the RX and TX buffers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">slv_tx_buf_len</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffers are only needed if the ESP32 is being used in the slave mode. Since we are using it as a master, we will keep these buffers as 0. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">intr_alloc_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>is to set the interrupt flag for the I2C. We will keep it as 0 too, since we are not using any interrupts </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>void i2c_driver_install(I2C_NUM_0, conf.mode, 0, 0, 0); </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nicolas/Documentos/especialidad_en_SE/2_arquitectura_2024_SE/lcd_hdt11_nico/main/devices/include/i2c_app.h" line="48" column="13" declfile="/home/nicolas/Documentos/especialidad_en_SE/2_arquitectura_2024_SE/lcd_hdt11_nico/main/devices/include/i2c_app.h" declline="48" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
